buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")

    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: "jacoco" // Jacoco Code Coverage
apply plugin: 'checkstyle'
apply plugin: 'org.springframework.boot'
//apply plugin: 'javafx-gradle-plugin'


repositories {
    mavenCentral()
}


dependencies {
    // compile "joda-time:joda-time:2.2"
    compile 'org.springframework:spring-context:4.3.5.RELEASE'
    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    // https://mvnrepository.com/artifact/com.miglayout/miglayout-swing
    compile group: 'com.miglayout', name: 'miglayout-swing', version: '5.0'

    testCompile "junit:junit:4.12"
    testCompile 'org.mockito:mockito-core:2.6.5'
}

mainClassName = 'com.moc.chitchat.Application'

sourceSets.main.java.srcDirs = ['src']
sourceSets.test.java.srcDirs = ['test']

jar {
    manifest {
        attributes(
//            'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
            'Main-Class': 'com.moc.chitchat.Application'
        )
    }
}

test {
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

jacoco {
    toolVersion = "0.7.8"
    reportsDir = file("$buildDir/JacocoCoverageReport")
}

checkstyle {
    toolVersion = "7.4"
    sourceSets = [project.sourceSets.main]
}
